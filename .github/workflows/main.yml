name: Netflix Application Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_ADDRESS: shashank.devops-days-upes.com
  EC2_USER_NAME: ubuntu
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} 
  PRIVATE_KEY_PATH: .private_key.pem
  TARGET_DIR: ~/app
  AWS_ECR_REPOSITORY_NAMESPACE: "ai-shashank"

jobs:
  
  Deploy:

    name: Deploy in AWS EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the app code
        uses: actions/checkout@v2

      - name: Setup SSH Key
        run: |
          rm -f ${{ env.PRIVATE_KEY_PATH }}
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{ env.PRIVATE_KEY_PATH }}
          chmod 600 ${{ env.PRIVATE_KEY_PATH }}

      - name: List files in EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} "ls -la ~/"

      - name: Copy files to EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} "mkdir -p ${{ env.TARGET_DIR }}"
          scp -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} -r * ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }}:${{ env.TARGET_DIR }}
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} <<'EOF'
            echo ""
            echo "Listing files in the home directory"
            ls -la ${{ env.TARGET_DIR }}
            echo ""
            echo "Checking disk usage"
            df -h
          EOF

      - name: Install Docker on the EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} <<'EOF'
            sudo apt-get update
            sudo apt-get install -y docker.io docker-compose
            sudo systemctl start docker
            sudo systemctl enable docker
          EOF

      - name: Login to ECR (on the EC2 Instance)
        env: 
          AWS_REGION: us-east-1
          AWS_ECR_REGISTRY: 700935310038.dkr.ecr.us-east-1.amazonaws.com
          AWS_ECR_USERNAME: AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} <<'EOF'
            echo ""
            echo "Docker login"
            echo ${{ secrets.AWS_ECR_PASSWORD }} | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{ env.AWS_ECR_REGISTRY }}
          EOF

      - name: Pulling Docker Images
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} <<'EOF'
            AWS_ECR_REGISTRY="700935310038.dkr.ecr.us-east-1.amazonaws.com"

            for REPO in "ai-shashank/netflix-catalog" "ai-shashank/netflix-frontend"; do
              IMAGE_NAME="\${AWS_ECR_REGISTRY}/\${REPO}:latest"
              echo "Pulling \${IMAGE_NAME} ..."
              docker pull "\${IMAGE_NAME}"
            done
          EOF


      - name: Execute deployment script
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_PATH }} ${{ env.EC2_USER_NAME }}@${{ env.EC2_PUBLIC_ADDRESS }} <<'EOF'
            echo ""
            echo "Change directory to the app directory"
            cd ${{ env.TARGET_DIR }}
            echo ""
            echo "Execute docker-compose up to deploy the application"  
            sudo docker-compose -f docker-compose.yaml up -d
          EOF
